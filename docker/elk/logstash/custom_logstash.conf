# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  beats {
    port => 5044
  }
}

filter {
  # 丢弃Filebeat事件
  if [docker][container][name] =~ "filebeat.*" {
    drop {}
  }
 
  # 兼容文件形式的日志
  if [prospector][type] == "log" {
    grok {
      match => { "source" => "/usr/share/filebeat/applog/(?<app>.+)/(?<filename>.+)" }
    }
  } else {
    # Container name with "." in it(swarm)
    if "." in [docker][container][name] {

      # 通过两个mutate来控制处理顺序
      mutate {
        copy => { "[docker][container][name]" => "tempName" }
      }
      mutate {
        split => { "tempName" => "." }
        add_field => { "cName" => "%{tempName[0]}.%{tempName[1]}" }
        remove_field => ["tempName"]
      }
    # Container name without "."(normal container)
    } else {
      mutate {
        add_field => {"cName" => "%{[docker][container][name]}" }
      }
    }
  } # [prospector][type]

  # 添加本地时间戳
  ruby {
    code => "event.set('timeSuffix', event.get('[@timestamp]').time.localtime.strftime('%Y%m%d-%H'))"
  }

} # filter

output {
  ## DEBUG
  #file {
  #  path => "/data/logstash/debug.log"
  #}

  if [prospector][type] == "docker" {
    # Container: log in docker
    if [stream] == "stdout" {
      file {
        path => "/data/logstash/container/%{[host][name]}/%{cName}/stdout-%{timeSuffix}.txt"
        codec => line { format => "%{message}"}
      }
    } else {
      file {
        path => "/data/logstash/container/%{[host][name]}/%{cName}/stderr-%{timeSuffix}.txt"
        codec => line { format => "%{message}"}
      }
    }
  } else {
  # Legacy: log in files
    file {
      path => "/data/logstash/legacy/%{[host][name]}/%{app}/%{filename}-%{timeSuffix}.txt"
      codec => line { format => "%{message}"}
    }
  }
}
