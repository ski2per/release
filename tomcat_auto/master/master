#!/usr/bin/env python
###### Author           Skipper.D
###### DESCRIPTION      A master to control minions on Tomcat srv
###### VERSION          v1.1
###### UPDATE           2015/11/13
###### PYTHON VERSION   2
import sys
import os.path
import paramiko

from WG import *


# +------------------------+
# |      Main Program      |
# +------------------------+

if __name__ == "__main__":

    REMOTE_MINION = "/root/minion"
    
    args = sys.argv
    argsLen = len(args)

    if argsLen > 3:
        login = eval(args[1])
        w = Warpgate(login)
        
        if argsLen == 4:
            if args[2].upper() == "START":
                cmd = "{0} start {1}".format(REMOTE_MINION,args[3])
                w.summon(cmd)

            elif args[2].upper() == "STOP":
                cmd = "{0} stop {1}".format(REMOTE_MINION,args[3])
                w.summon(cmd)

            elif args[2].upper() == "REBOOT":
                cmd = "{0} reboot {1}".format(REMOTE_MINION,args[3])
                w.summon(cmd)

            elif args[2].upper() == "LIST":
                cmd = "{0} list {1}".format(REMOTE_MINION,args[3])
                w.summon(cmd)

            elif args[2].upper() == "RESTORE":
                cmd = "{0} restore {1}".format(REMOTE_MINION,args[3])
                w.summon(cmd)

            else:
                print "1"
                exit(1)
        elif argsLen == 5:
            if args[2].upper() == "BACKUP":
                cmd = "{0} backup {1} {2}".format(REMOTE_MINION,args[3],args[4])
                w.summon(cmd)

            elif args[2].upper() == "UPLOAD":
                print w.teleport(args[3],args[4])
            else:
                print "1"
                exit(1)
        
    else:
        print "1"
        exit(1)

