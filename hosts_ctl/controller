#!/usr/bin/env python

import os
import re
import sys
from warpgate import summon, teleport


def check_param(param):
    param_len = len(param)
    if param_len == 2:
        if os.path.exists(sys.argv[1]):
            f = sys.argv[1]
            m = 't'
            return [f, m]
        else:
            print(RED + "FILE NOT FOUND :/" + ENDC)
            exit(-1)
    elif (param_len == 3) and (sys.argv[2] == 'cmd'):
        m = 'cmd'
        cmd = sys.argv[1]
        return [cmd, m]
    else:
        print(BLUE + "UPLOAD MODE:" + ENDC)
        print(GREEN + "Usage: " + sys.argv[0] + " file_to_upload\n" + ENDC)
        print(BLUE + "COMMAND MODE:" + ENDC)
        print(GREEN + "Usage: " + sys.argv[0] + " 'Command' cmd" + ENDC)
        exit(-1)


def main(config):
    [item, mode] = check_param(sys.argv)

    print(BLUE + "Controller Initializing...\n" + ENDC)
    os.chdir(os.getcwd())
    try:
        target = open(config, 'r')
    except IOError:
        print(RED + "OPEN CONF ERROR :/" + ENDC)
        exit(-1)

    for t in target.readlines():
        t = t.rstrip('\n');
        if re.match('^$', t) or re.match('^#', t):
            continue
        login = t.split('|')
        remote_path = login.pop()  # now,"login" only conatins [ip,port,usr,psd]

        if mode == 't':
            local_file = os.path.abspath(item)
            teleport(login, local_file, remote_path)
            
        else:  # cmd mode
            if summon(login, item):
                print('{1}{0:<15}{2}: Command Error :/'.format(param[0], RED, ENDC))
                continue


if __name__ == "__main__":

    PINK        = '\033[95m'
    BLUE        = '\033[94m'
    GREEN       = '\033[92m'
    YELLOW      = '\033[93m'
    RED         = '\033[91m'
    UNDERLINE   = '\033[4m'
    ENDC        = '\033[0m'

    cwd = os.path.dirname(os.path.abspath(__file__))
    conf = cwd + "/conf"
    main(conf)
